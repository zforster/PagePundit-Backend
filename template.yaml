AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Resources for MyNextBook backend


Resources:
  # API GATEWAY
  MyNextBookAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'content-type'"
        AllowOrigin: "'http://localhost:3000'"
  # LAMBDA - RECOMMENDATIONS
  GetNewRecommendation:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 512
      Timeout: 30
      CodeUri: src/
      Description: Get recommendations for books for user input
      Handler: lambdas.recommendations.app.get_recommendations_from_text
      Runtime: python3.9
      Events:
        GetRecommendations:
          Type: Api
          Properties:
            RestApiId: !Ref MyNextBookAPI
            Path: /new
            Method: post
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          RECOMMENDATIONS_TABLE: !Ref RecommendationsTable
  GetRecommendations:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Description: Fetch stored recommendations
      Handler: lambdas.recommendations.app.get_recommendations
      Runtime: python3.9
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          RECOMMENDATIONS_TABLE: !Ref RecommendationsTable
      Events:
        FetchRecommendations:
          Type: Api
          Properties:
            RestApiId: !Ref MyNextBookAPI
            Path: /recommendations/{recommendation_type}/{timestamp}
            Method: get
  GetRecommendationById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Description: Fetch stored recommendation by id
      Handler: lambdas.recommendations.app.get_recommendation_by_id
      Runtime: python3.9
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          RECOMMENDATIONS_TABLE: !Ref RecommendationsTable
      Events:
        FetchRecommendations:
          Type: Api
          Properties:
            RestApiId: !Ref MyNextBookAPI
            Path: /{recommendation_id}
            Method: get
  # ROLES
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetOpenAPIKey
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - ssm:GetParameter
                Effect: Allow
                Resource: arn:aws:ssm:eu-west-1:438998290379:parameter/open_ai_key
        - PolicyName: GetGoogleBooksKey
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - ssm:GetParameter
                Effect: Allow
                Resource: arn:aws:ssm:eu-west-1:438998290379:parameter/google_books_key
        - PolicyName: CloudWatchAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                Resource:
                  - !GetAtt RecommendationsTable.Arn
                  - !Join ["/", [!GetAtt RecommendationsTable.Arn, "index", "RecommendationIdIndex"]]
  # DYNAMODB
  RecommendationsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: 'recommendation_type'
          AttributeType: 'S'
        - AttributeName: 'recommendation_id'
          AttributeType: 'S'
        - AttributeName: 'timestamp'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'recommendation_type'
          KeyType: 'HASH'
        - AttributeName: 'timestamp'
          KeyType: 'RANGE'
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 25
        WriteCapacityUnits: 25
      GlobalSecondaryIndexes:
        - IndexName: RecommendationIdIndex
          KeySchema:
            - AttributeName: 'recommendation_id'
              KeyType: 'HASH'
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 25
            WriteCapacityUnits: 25
